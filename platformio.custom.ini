; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[custom]
build_flags = 
  -D ENOCEANGATEWAY
  -D LOGICMODULE
  -D NO_I2C
  -D OPENKNX_LOOPTIME_WARNING=100

; debug parameters
[custom_develop]
extends = custom
build_flags = 
  ${custom.build_flags}
  -D OPENKNX_HEARTBEAT
  ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10  ; will print a info when a loop took more than x ms.
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ; "-D OPENKNX_TRACE1=Common.*"
  ; "-D OPENKNX_TRACE2=Flash.*"
debug_build_flags = 
  -D OPENKNX_DEBUGGER
  -ggdb3

; this config block is for specifing options that are valid for all RP2040-based builds
[RP2040_custom]
extends = RP2040, custom
build_flags = 
  -D SERIAL_DEBUG=Serial
  -D USE_KNX_DMA_UART=0
  -D USE_KNX_DMA_IRQ=0
  -Wunused-variable

; this config block is for specifing options that are valid for all RP2040-based develop/debug builds
[RP2040_custom_develop]
extends = RP2040_develop, RP2040_custom, custom_develop, RP2040_EXCHANGE_2MB
build_flags = 
  ${RP2040_develop.build_flags}
  ${RP2040_custom.build_flags}
  ${custom_develop.build_flags}
  ${RP2040_EXCHANGE_2MB.build_flags}
  ${KNX_TP.build_flags}
debug_build_flags = 
  ${custom_develop.debug_build_flags}
  -O0 

; this config block is for specifing options that are valid for all RP2040-based release builds
[RP2040_custom_releases]
extends = RP2040_releases, RP2040_custom, custom, RP2040_EXCHANGE_16MB
build_flags = 
  ${RP2040_EXCHANGE_16MB.build_flags}
  ${RP2040_releases.build_flags}
  ${RP2040_custom.build_flags}
  ${custom.build_flags}
  ${KNX_TP.build_flags}
  -D OPENKNX_DEBUG
  -O0

[env:develop_RP2040]
extends = RP2040_custom_develop, RP2040_EXCHANGE_2MB
build_flags =
  ${RP2040_custom_develop.build_flags}
  -D BOARD_ENOCEAN

; ****************************************
;
; SAMD
; 
; this config block is for specifing options that are valid for all SAMD-based builds
[SAMD_custom]
extends = SAMD, custom
build_flags = 
  -D SERIAL_DEBUG=SerialUSB
  -D KNX_DEBUG_SERIAL=SerialUSB
  -D KNX_SERIAL=Serial1

; this config block is for specifing options that are valid for all SAMD-based develop/debug builds
[SAMD_custom_develop]
extends = SAMD_custom, SAMD_develop, custom_develop
build_flags = 
  ${SAMD_develop.build_flags}
  ${SAMD_custom.build_flags}
  ${custom_develop.build_flags}
  ${KNX_TP.build_flags}
debug_build_flags = 
  ${custom_develop.debug_build_flags}
  -Os 


; this config block is for specifing options that are valid for all SAMD-based release builds
[SAMD_custom_releases]
extends = SAMD_releases, SAMD_custom, custom
build_flags = 
  ${SAMD_releases.build_flags}
  ${SAMD_custom.build_flags}
  ${custom.build_flags}
  ${KNX_TP.build_flags}
  -Os

[env:develop_SAMD]
extends = SAMD_custom_develop
build_flags =
  ${SAMD_custom_develop.build_flags}
  -D BOARD_ENOCEAN

[env:upload_USB_SAMD]
extends = SAMD_UPLOAD_USB, env:develop_SAMD

[env:upload_JLINK_SAMD]
extends = UPLOAD_JLINK, env:develop_SAMD

[env:upload_USB_RP2040]
extends = RP2040_UPLOAD_USB, env:develop_RP2040

[env:upload_JLINK_RP2040]
extends = UPLOAD_JLINK, env:develop_RP2040

[env:release_EnoceanGateway_SAMD]
extends = SAMD_custom_releases
build_flags =
  ${SAMD_custom_releases.build_flags}

[env:release_EnoceanGateway_RP2040]
extends = RP2040_custom_releases
build_flags =
  ${RP2040_custom_releases.build_flags}

